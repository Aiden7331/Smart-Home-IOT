/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M26
 * Generated at: 2017-12-10 11:57:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>Smart home system - 메인화면</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/layout_basic.css\t\">\r\n");
      out.write("<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("\t\t\t/* 메뉴 전체영역에 대한 스타일 */\r\n");
      out.write("\t\t#nav {\r\n");
      out.write("\t\t\tlist-style-type: none;\t/* 불릿 기호 없앰 */\r\n");
      out.write("\t\t\theight: 45px;\r\n");
      out.write("\t\t\tpadding: 6px 7px;\r\n");
      out.write("\t\t\tmargin: 0;\r\n");
      out.write("\t\t\tbackground: #7D7D7D;\r\n");
      out.write("\t\t\tborder-radius: 1.5em;\t/* 모서리 둥글게 */\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/* 서브메뉴 영역에 대한 스타일 */\r\n");
      out.write("\t\t#nav ul {\r\n");
      out.write("\t\t\tmargin: 0;\r\n");
      out.write("\t\t\tpadding: 0;\r\n");
      out.write("\t\t\tlist-style: none;\r\n");
      out.write("\t\t\tposition: absolute;\r\n");
      out.write("\t\t\tleft: 0;\r\n");
      out.write("\t\t\ttop: 45px;\r\n");
      out.write("\t\t\twidth: 150px;\r\n");
      out.write("\t\t\tbackground: #DDDDDD;\r\n");
      out.write("\t\t\tborder: 1px solid #B4B4B4;\r\n");
      out.write("\t\t\tborder-radius: 8px;\r\n");
      out.write("\t\t\t-webkit-box-shadow: 0 1px 3px RGBA(0, 0, 0, 0.3);\r\n");
      out.write("\t\t\t-moz-box-shadow: 0 1px 3px RGBA(0, 0, 0, 0.3);\r\n");
      out.write("\t\t\tbox-shadow: 0 1px 3px RGBA(0, 0, 0, 0.3);\r\n");
      out.write("\t\t\topacity: 0;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/* 서브메뉴 링크 스타일 */\r\n");
      out.write("\t\t#nav ul a {\r\n");
      out.write("\t\t\tfont-weight: normal;\r\n");
      out.write("\t\t\ttext-shadow: 0 1px 0 #FFFFFF;\r\n");
      out.write("\t\t\tcolor: #333333;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/* 서브메뉴 각 항목의 스타일 */\r\n");
      out.write("\t\t#nav ul li {\r\n");
      out.write("\t\t\tfloat: none;\r\n");
      out.write("\t\t\tmargin: 0;\r\n");
      out.write("\t\t\tpadding: 0;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/* 서브메뉴 각 항목 위로 마우스를 올렸을 때 */\r\n");
      out.write("\t\t#nav ul li:hover a {\r\n");
      out.write("\t\t\tbackground: #0078FF;\r\n");
      out.write("\t\t\tcolor: #FFFFFF;\r\n");
      out.write("\t\t\ttext-shadow: 0 1px RGBA(0, 0, 0, 0.1);\r\n");
      out.write("\t\t\tborder-radius: 0;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/* 서브메뉴 첫번째 항목의 스타일 */\r\n");
      out.write("\t\t#nav ul li:first-child > a {\r\n");
      out.write("\t\t\t-webkit-border-top-left-radius: 8px;\r\n");
      out.write("\t\t\t-moz-border-radius-topleft: 8px;\r\n");
      out.write("\t\t\t-webkit-border-top-right-radius: 8px;\r\n");
      out.write("\t\t\t-moz-border-radius-topright: 8px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/* 서브메뉴 마지막 항목의 스타일 */\r\n");
      out.write("\t\t#nav ul li:last-child > a {\r\n");
      out.write("\t\t\t-webkit-border-bottom-left-radius: 8px;\r\n");
      out.write("\t\t\t-moz-border-radius-bottomleft: 8px;\r\n");
      out.write("\t\t\t-webkit-border-bottom-right-radius: 8px;\r\n");
      out.write("\t\t\t-moz-border-radius-bottomright: 8px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/* 메뉴 각 항목에 대한 스타일 */\r\n");
      out.write("\t\t#nav li {\r\n");
      out.write("\t\t\tfloat: left;\t\t\t/* li 각 항목을 왼쪽정렬시키기 */\r\n");
      out.write("\t\t\tposition: relative;\t\t/* 순서대로 표시 */\r\n");
      out.write("\t\t\tmargin: 5px 10px;\r\n");
      out.write("\t\t\tpadding: 0;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/* 메뉴의 링크에 대한 스타일 */\r\n");
      out.write("\t\t#nav li a {\r\n");
      out.write("\t\t\tdisplay: block;\t\t\t/* 영역을 만듦 */\r\n");
      out.write("\t\t\tfont-family: \"굴림\";\r\n");
      out.write("\t\t\tfont-weight: 600;\r\n");
      out.write("\t\t\tfont-size: 1em;\r\n");
      out.write("\t\t\tpadding: 10px 20px;\r\n");
      out.write("\t\t\tcolor: #E7E5E5;\r\n");
      out.write("\t\t\ttext-decoration: none;\r\n");
      out.write("\t\t\tmargin: 0;\r\n");
      out.write("\t\t\tborder-radius: 1.4em;\r\n");
      out.write("\t\t\ttext-shadow: 0 1px 1px RGBA(0, 0, 0, 0.3);\t/* 그림자 효과 */\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/* 메인 메뉴 위로 마우스 포인터를 가져갔을 때 서브 메뉴 스타일 */\r\n");
      out.write("\t\t#nav li:hover ul {\r\n");
      out.write("\t\t\topacity: 1;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t/* 메뉴 항목 위로 마우스를 올렸을 때 스타일 */\r\n");
      out.write("\t\t#nav li:hover a {\r\n");
      out.write("\t\t\tbackground: #EBEBEB;\r\n");
      out.write("\t\t\tcolor: #444444;\r\n");
      out.write("\t\t\ttext-shadow: 0 1px 1px RGBA(255, 255, 255, 1);\r\n");
      out.write("\t\t\tborder-radius: 1.4em;\r\n");
      out.write("\t\t\t-webkit-box-shadow: 0 1px 1px RGBA(0, 0, 0, 0.2);\r\n");
      out.write("\t\t\t-moz-box-shadow: 0 1px 1px RGBA(0, 0, 0, 0.2);\r\n");
      out.write("\t\t}\r\n");
      out.write("</style>\r\n");
      out.write("<script language=\"javascript\">\r\n");
      out.write("  function locationEat() { \r\n");
      out.write("\t  document.getElementById('Context').src='contents/eatschedule.jsp'\r\n");
      out.write("\t  document.getElementById('Side').src='sideBar/navEat.html'\r\n");
      out.write("\t  }\r\n");
      out.write("  function locationwriteMemo(){\r\n");
      out.write("\t  document.getElementById('Context').src='contents/writeMemo.jsp'\r\n");
      out.write("      document.getElementById('Side').src='sideBar/navEat.html'  \r\n");
      out.write("  }\r\n");
      out.write("  function locationNot() {\r\n");
      out.write("\t  document.getElementById('Context').src='contents/userNotice.jsp' \r\n");
      out.write("\t  document.getElementById('Side').src='sideBar/navArduino.jsp'\r\n");
      out.write("  }\r\n");
      out.write("  function locationAlarm() { \r\n");
      out.write("\t  document.getElementById('Context').src='contents/alarm.jsp'\r\n");
      out.write("\t  document.getElementById('Side').src='sideBar/navArduino.jsp'\r\n");
      out.write("\t  }\r\n");
      out.write("  function locationTemper() { \r\n");
      out.write("\t  document.getElementById('Context').src='contents/temperature.jsp'\r\n");
      out.write("\t  document.getElementById('Side').src='sideBar/navArduino.jsp'\r\n");
      out.write("\t  }\r\n");
      out.write("  function locationuserAdmin() { \r\n");
      out.write("\t  document.getElementById('Context').src='contents/admin/userAdmin.jsp'\r\n");
      out.write("\t  document.getElementById('Side').src='sideBar/navtab.html'\r\n");
      out.write("\t  }\r\n");
      out.write("  function locationmodifyUser() { \r\n");
      out.write("\t  document.getElementById('Context').src='contents/admin/userAdmin.jsp'\r\n");
      out.write("\t  document.getElementById('Side').src='sideBar/navtab.html'\r\n");
      out.write("\t  }\r\n");
      out.write("  function locationuserApproval() { \r\n");
      out.write("\t  document.getElementById('Context').src='contents/admin/Approval.jsp'\r\n");
      out.write("\t  }\r\n");
      out.write("  function locationhomeSetting(){\r\n");
      out.write("\t  document.getElementById('Context').src='contents/admin/homeSetting.jsp'\r\n");
      out.write("\t  document.getElementById('Side').src='sideBar/navArduino.jsp'\r\n");
      out.write("\t\t\t  \r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 세션 유효성 검사 -->\r\n");

String Name=null;
if((Name=(String)session.getAttribute("userName"))==null){
	
      out.write("<script>\r\n");
      out.write("\tjavascript:alert(\"로그아웃 된 사용자입니다.\");\r\n");
      out.write("\tjavascript:location.href(\"html/login2.html\");\r\n");
      out.write("\t</script>");
} 
      out.write("\r\n");
      out.write("<div id=\"header\">\r\n");
      out.write("<font style=\"float:right\">");
      out.print(Name );
      out.write("님 환영합니다. <a href=\"proc/logoutproc.jsp\">로그아웃</a></font>\r\n");
      out.write("<h2> <a onclick=\"javascript:location.href='main.jsp'\">스마트 홈 시스템</a></h2>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t<img src='resource/nav/navbar-logo.jpg' width=\"100%\">\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<ul id=\"nav\">\r\n");
      out.write("\t\t<li><a href=\"#\">Life</a>\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" name=\"Eatting\" onclick=\"locationEat();\">Cooking Menu/ Memo</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" name=\"Notice\"  onclick=\"locationNot();\">Family Bulletin Board</a>\r\n");
      out.write("\t\t\t</li></ul></li>\r\n");
      out.write("\t\t<li><a href=\"#\">Smart Control</a>\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" name=\"alarm\"  onclick=\"locationAlarm();\">Alarm</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" name=\"temperature\" onclick=\"locationTemper();\">Temperature</a>\r\n");
      out.write("\t\t\t</li></ul>\r\n");
      out.write("\t\t</li> ");
if((String)session.getAttribute("adminAuth")!=null&&session.getAttribute("adminAuth").toString().equals("1")){ 
      out.write("\r\n");
      out.write("\t\t<li><a href=\"#\">Management</a>\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" name=\"userM\" onclick=\"locationuserAdmin();\">User</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"#\" name=\"Set\" onclick=\"locationhomeSetting();\">Home Setting</a>\r\n");
      out.write("\t\t\t</li></ul>\r\n");
      out.write("\t\t</li>");
} 
      out.write("\r\n");
      out.write("\t</ul>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"contents\">\r\n");
      out.write("<iframe id=\"Context\" src=\"mainContext.jsp\" style=\"height:100%; width:100%; border:0; padding:0px; margin-top:20px;\"></iframe>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"sideBar\">\r\n");
      out.write("<iframe id=\"Side\" src=\"sideBar/navArduino.jsp\" style=\"height:100%; width:100%; border:0; padding:0px;\"></iframe>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
